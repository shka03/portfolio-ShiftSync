<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.levels.ShiftSync.repository.attendance.record.EditClockTimeMapper">
	
    <!-- 出勤時間と退勤時間の同時修正 -->
    <update id="updateClockInAndOut" parameterType="map">
        UPDATE attendance_records
        SET clock_in = date_trunc('second', #{newClockIn}::timestamp without time zone),
            clock_out = date_trunc('second', #{newClockOut}::timestamp without time zone)
        WHERE record_id = #{recordId} AND employee_id = #{employeeId}
    </update>
    
	<!-- 勤怠修正申請データを登録/更新 -->
    <insert id="upsertClockInAndOut" parameterType="map">
        INSERT INTO attendance_time_corrections (record_id, employee_id, year_month_day, clock_in, clock_out, work_duration, application_reason)
        VALUES (#{recordId}, #{employeeId}, #{yearMonthDay}, #{newClockIn}, #{newClockOut}, #{workDuration}::interval, #{applicationReason})
        ON CONFLICT (record_id, year_month_day)
        DO UPDATE SET
            clock_in = #{newClockIn},
            clock_out = #{newClockOut},
            work_duration = #{workDuration}::interval,
            application_reason = #{applicationReason}
    </insert>

    <!-- 特定のレコードIDから勤怠データの取得 -->
    <select id="getCurrentRecord" parameterType="map" resultType="com.levels.ShiftSync.entity.AttendanceRecord">
        SELECT
            record_id AS recordId,
            employee_id AS employeeId,
            clock_in AS clockIn,
            clock_out AS clockOut,
            TO_CHAR(work_duration, 'HH24:MI:SS') AS workDuration 
        FROM attendance_records
        WHERE record_id = #{recordId}
    </select>

	<!-- 特定のレコードIDから勤怠修正申請データの取得 -->
	<select id="getCurrentEditRecord" resultType="com.levels.ShiftSync.entity.AttendanceEditRequest">
		SELECT
			request_id AS requestId,
			record_id AS recordId,
		    employee_id AS employeeId,
		    year_month_day AS yearMonthDay,
		    clock_in AS clockIn,
		    clock_out AS clockOut,
		    TO_CHAR(work_duration, 'HH24:MI:SS') AS workDuration,
		    application_reason AS applicationReason
		FROM attendance_time_corrections
		WHERE employee_id = #{employeeId}
		AND year_month_day = #{yearMonthDay}
	</select>
	
</mapper>