<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.levels.ShiftSync.repository.attendance.record.WorkDurationMapper">
	
	<!-- 勤怠データを登録/更新 -->
	<insert id="upsertWorkDuration" parameterType="map">
		INSERT INTO attendance_records (record_id, work_duration)
		VALUES (#{recordId}, 
		        INTERVAL '1 SECOND' * 
		        CASE 
		            WHEN EXTRACT(EPOCH FROM (CAST(#{clockOut} AS TIMESTAMP) - CAST(#{clockIn} AS TIMESTAMP))) >= 3600 THEN 
		                ROUND((EXTRACT(EPOCH FROM (CAST(#{clockOut} AS TIMESTAMP) - CAST(#{clockIn} AS TIMESTAMP))) - 3600) / 60) * 60
		            ELSE 
		                ROUND(EXTRACT(EPOCH FROM (CAST(#{clockOut} AS TIMESTAMP) - CAST(#{clockIn} AS TIMESTAMP))))
		        END)
		ON CONFLICT (record_id)
		DO UPDATE SET
		    work_duration = 
		        INTERVAL '1 SECOND' * 
		        CASE 
		            WHEN EXTRACT(EPOCH FROM (CAST(#{clockOut} AS TIMESTAMP) - CAST(#{clockIn} AS TIMESTAMP))) >= 3600 THEN 
		                ROUND((EXTRACT(EPOCH FROM (CAST(#{clockOut} AS TIMESTAMP) - CAST(#{clockIn} AS TIMESTAMP))) - 3600) / 60) * 60
		            ELSE 
		                ROUND(EXTRACT(EPOCH FROM (CAST(#{clockOut} AS TIMESTAMP) - CAST(#{clockIn} AS TIMESTAMP))))
		        END;
	</insert>
	<!-- 当日の勤怠データを取得 -->
	<select id="getTodayRecordForEmployee" parameterType="java.lang.Integer" resultType="com.levels.ShiftSync.entity.AttendanceRecord">
	    SELECT
	        record_id AS recordId,
		    employee_id AS employeeId,
		    clock_in AS clockIn,
		    clock_out AS clockOut,
		    TO_CHAR(work_duration, 'HH24:MI:SS') AS workDuration 
	    FROM attendance_records
	    WHERE employee_id = #{employeeId}
	    AND  DATE(clock_in) = current_date
	</select>

	<!-- 特定の月の勤怠データを取得 -->
	<select id="getRecordForYearByMonth" parameterType="map" resultType="com.levels.ShiftSync.entity.AttendanceRecord">
	    <![CDATA[
	    SELECT
	        record_id AS recordId,
	        employee_id AS employeeId,
	        clock_in AS clockIn,
	        clock_out AS clockOut,
		    TO_CHAR(work_duration, 'HH24:MI:SS') AS workDuration 
	    FROM attendance_records
	    WHERE employee_id = #{employeeId}
	    AND clock_in >= date_trunc('month', to_date(#{yearMonth}, 'YYYY-MM'))
	    AND clock_in < date_trunc('month', to_date(#{yearMonth}, 'YYYY-MM')) + interval '1 month'
	    ORDER BY clock_in ASC
	    ]]>
	</select>
	
</mapper>